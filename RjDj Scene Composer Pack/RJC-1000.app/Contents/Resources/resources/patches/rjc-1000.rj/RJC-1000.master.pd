#N struct 1011-symarray float x array symbols 1011-sym;
#N struct 1011-sym symbol name float on;
#N canvas 28 385 888 567 10;
#N canvas 150 44 788 626 slot-manager 0;
#N canvas 204 231 751 492 slot-builder 0;
#N canvas 355 77 830 530 put-module-into-slot 0;
#X obj 211 505 send;
#X msg 602 296 symbol pd-\$1-slot;
#X obj 211 387 list prepend obj 20 20;
#X obj 211 408 list trim;
#X msg 511 295 clear;
#X obj 126 49 inlet;
#X text 225 40 <slot-id> <decorator> <receive-tag> <module>;
#X text 448 169 assumes subpatches named [pd <slot-id>-slot];
#X msg 230 63 12 decor-s1m1-s1m1 rjc_drums/rjc_drums;
#X msg 211 243 symbol SLOT-\$1;
#X obj 126 159 t b a b a;
#X msg 126 357 loadbang;
#X obj 126 108 list split 1;
#X obj 212 288 list split 2;
#X obj 212 314 unpack s s;
#X obj 212 333 list prepend;
#X obj 212 269 list append;
#X obj 212 357 list append;
#X connect 1 0 0 1;
#X connect 2 0 3 0;
#X connect 3 0 0 0;
#X connect 4 0 0 0;
#X connect 5 0 12 0;
#X connect 8 0 12 0;
#X connect 9 0 16 0;
#X connect 10 0 11 0;
#X connect 10 1 9 0;
#X connect 10 2 4 0;
#X connect 10 3 1 0;
#X connect 11 0 0 0;
#X connect 12 0 10 0;
#X connect 12 1 16 1;
#X connect 13 0 14 0;
#X connect 13 1 17 1;
#X connect 14 0 15 0;
#X connect 14 1 15 1;
#X connect 15 0 17 0;
#X connect 16 0 13 0;
#X connect 17 0 2 0;
#X restore 101 370 pd put-module-into-slot;
#X text 198 191 <slot-id> <decorator> <module>;
#X msg 184 271 1 decor-s1m1-s1m1 rjc_drums/rjc_drums;
#X text 188 169 Messages like this:;
#X text 185 209 will put a decorated module into the slot <slot-id>
which is the subpatch [pd <slot-id>-slot]. The module will get an automatic
receiver-tag as "SLOT-<slot-id>";
#X text 184 300 Example: This will clear [pd 1-slot] and add an object
[decor-s1m1-s1m1 SLOT-1 rjc_drums/rjc_drums] there.;
#X msg 465 98 \; pd-\$1-slot clear;
#N canvas 0 22 450 300 countto 0;
#X obj 99 58 inlet;
#X obj 99 177 f 0;
#X obj 127 177 + 1;
#X msg 142 143 0;
#X obj 99 208 outlet;
#X obj 99 142 until;
#X obj 99 117 t a b;
#X obj 99 96 max;
#X connect 0 0 7 0;
#X connect 1 0 2 0;
#X connect 1 0 4 0;
#X connect 2 0 1 1;
#X connect 3 0 1 1;
#X connect 5 0 1 0;
#X connect 6 0 5 0;
#X connect 6 1 3 0;
#X connect 7 0 6 0;
#X restore 465 76 pd countto;
#X msg 465 55 16;
#X text 503 56 clear all slots;
#X obj 102 32 inlet;
#X text 184 339 Use this for remote control with Python etc.;
#X connect 2 0 0 0;
#X connect 7 0 6 0;
#X connect 8 0 7 0;
#X connect 10 0 0 0;
#X restore 24 175 pd slot-builder;
#X msg 305 110 clear;
#X obj 305 89 r \$0-clearslots;
#X msg 430 111 \; pd-\$1-slot clear;
#X obj 41 125 r \$0-slot;
#N canvas 0 22 692 366 suspend-dsp 0;
#X obj 106 197 s pd;
#X msg 106 125 dsp 1;
#X msg 213 124 dsp 0;
#X obj 151 65 inlet;
#X obj 174 197 outlet;
#X obj 151 91 t b a b;
#X text 214 155 This will suspend dsp \, until the middle trigger outlet's
operation has finished.;
#X connect 1 0 0 0;
#X connect 2 0 0 0;
#X connect 3 0 5 0;
#X connect 5 0 1 0;
#X connect 5 1 4 0;
#X connect 5 2 2 0;
#X restore 41 148 pd suspend-dsp;
#X text 117 130 single slot message;
#X obj 430 89 r \$0-clearslot;
#X msg 305 220 \; pd-\$1-slot clear;
#N canvas 0 22 450 300 countto 0;
#X obj 99 58 inlet;
#X obj 99 177 f 0;
#X obj 127 177 + 1;
#X msg 142 143 0;
#X obj 99 208 outlet;
#X obj 99 142 until;
#X obj 99 117 t a b;
#X obj 99 96 max;
#X connect 0 0 7 0;
#X connect 1 0 2 0;
#X connect 1 0 4 0;
#X connect 2 0 1 1;
#X connect 3 0 1 1;
#X connect 5 0 1 0;
#X connect 6 0 5 0;
#X connect 6 1 3 0;
#X connect 7 0 6 0;
#X restore 305 198 pd countto;
#X msg 305 177 16;
#X text 343 178 clear all slots;
#X text 300 265 Old-slots are kept as they are \, so you may want to
clear them manually.;
#X obj 305 149 b;
#X obj 24 100 r \$0-slot-init;
#X connect 1 0 13 0;
#X connect 2 0 1 0;
#X connect 4 0 5 0;
#X connect 5 0 0 0;
#X connect 7 0 3 0;
#X connect 9 0 8 0;
#X connect 10 0 9 0;
#X connect 13 0 10 0;
#X connect 14 0 0 0;
#X restore 64 329 pd slot-manager;
#N canvas 0 22 553 481 sound-IO 0;
#X obj 88 270 catch~ RJC1000-S-OUT;
#X obj 40 336 soundoutput;
#X obj 142 297 catch~ RJC1000-S-OUT-1;
#X obj 39 241 catch~ RJC1000-S-OUT-0;
#X text 204 240 left;
#X text 244 269 both;
#X text 310 300 right;
#X obj 38 58 soundinput;
#X obj 38 153 s~ RJC1000-S-IN;
#X obj 38 105 e_agc;
#X obj 38 129 *~ 0.7;
#X obj 38 177 s~ RJC1000-S-IN-0;
#X obj 38 201 s~ RJC1000-S-IN-1;
#X obj 239 118 r \$0-volume;
#X obj 239 180 s #volume;
#X text 204 96 pass along volume from system-message;
#X obj 239 138 * 100;
#X obj 239 158 dbtorms;
#X text 308 154 use log scale for volume;
#X connect 0 0 1 0;
#X connect 0 0 1 1;
#X connect 2 0 1 1;
#X connect 3 0 1 0;
#X connect 7 0 9 0;
#X connect 9 0 10 0;
#X connect 10 0 8 0;
#X connect 10 0 11 0;
#X connect 10 0 12 0;
#X connect 13 0 16 0;
#X connect 16 0 17 0;
#X connect 17 0 14 0;
#X restore 64 251 pd sound-IO;
#N canvas 0 22 567 326 sample-manager 0;
#N canvas 245 106 901 618 samples 0;
#X msg 369 93 open sounds;
#X obj 89 101 unpack f f;
#X obj 286 289 route size;
#X obj 286 267 list trim;
#X obj 89 517 s RJC1000-M-IN;
#X obj 89 439 list;
#X msg 108 70 0 0;
#X obj 590 497 s RJC1000-M-IN;
#X obj 590 454 tgl 15 0 empty empty empty 17 7 0 10 -204786 -1 -1 0
1;
#X msg 590 475 switch ALL \$1;
#X obj 389 65 loadbang;
#X text 308 242 stereo samples here!;
#X text 585 434 for quick testing;
#X obj 89 35 inlet;
#X text 138 50 <slot-id> <sample-id>;
#X text 142 31 Mapping of slots to samples:;
#X obj 369 35 inlet;
#X text 467 65 If samples need reloading \, bang this as well.;
#X msg 156 123 size \$1 \, \$1;
#X obj 286 311 unpack 0 0;
#X obj 156 409 list append;
#X text 252 412 append size in samples to table name;
#X msg 89 470 switch SLOT-\$1 1 \, SLOT-\$1 0 p0 \$2 \$3 \, switch
SLOT-\$1 0;
#X obj 156 238 u_samplekit2 SAMPLE;
#X text 231 449 switch on \, send table name and size \, switch off.
;
#X connect 0 0 23 0;
#X connect 1 0 5 0;
#X connect 1 1 18 0;
#X connect 2 0 19 0;
#X connect 3 0 2 0;
#X connect 5 0 22 0;
#X connect 6 0 1 0;
#X connect 8 0 9 0;
#X connect 9 0 7 0;
#X connect 10 0 0 0;
#X connect 13 0 1 0;
#X connect 16 0 0 0;
#X connect 18 0 23 0;
#X connect 19 1 20 1;
#X connect 20 0 5 1;
#X connect 22 0 4 0;
#X connect 23 0 20 0;
#X connect 23 1 3 0;
#X restore 77 153 pd samples;
#X msg 77 105 0 0;
#X text 111 106 map <slot-id> to <sample-id>;
#X msg 144 129 load samplekit first here;
#X text 75 76 LATER: How to add samplekits;
#X connect 1 0 0 0;
#X connect 3 0 0 1;
#X restore 64 297 pd sample-manager;
#N canvas 124 77 535 470 \$0-slots 0;
#N canvas 513 178 450 300 0-slot 0;
#X restore 20 20 pd 0-slot;
#N canvas 0 22 450 300 1-slot 0;
#X restore 20 40 pd 1-slot;
#N canvas 0 22 450 300 2-slot 0;
#X restore 20 60 pd 2-slot;
#N canvas 0 22 450 300 3-slot 0;
#X restore 20 80 pd 3-slot;
#N canvas 0 22 450 300 4-slot 0;
#X restore 20 100 pd 4-slot;
#N canvas 0 22 450 300 5-slot 0;
#X restore 20 120 pd 5-slot;
#N canvas 0 22 450 300 6-slot 0;
#X restore 20 140 pd 6-slot;
#N canvas 0 22 450 300 7-slot 0;
#X restore 20 160 pd 7-slot;
#N canvas 0 22 450 300 8-slot 0;
#X restore 20 180 pd 8-slot;
#N canvas 0 22 450 300 9-slot 0;
#X restore 20 200 pd 9-slot;
#N canvas 0 22 450 300 10-slot 0;
#X restore 20 220 pd 10-slot;
#N canvas 0 22 450 300 11-slot 0;
#X restore 20 240 pd 11-slot;
#N canvas 0 22 450 300 12-slot 0;
#X restore 20 260 pd 12-slot;
#N canvas 0 22 450 300 13-slot 0;
#X restore 20 280 pd 13-slot;
#N canvas 0 22 450 300 14-slot 0;
#X restore 20 300 pd 14-slot;
#N canvas 0 22 450 300 15-slot 0;
#X restore 20 320 pd 15-slot;
#X restore 64 357 pd \$0-slots;
#X text 166 247 soundinput/output;
#X text 199 296 samplekits etc.;
#X text 168 356 the slots;
#X text 181 328 fill or empty the slots;
#N canvas 946 421 313 198 timebase 0;
#N canvas 215 170 656 510 timebase 0;
#X obj 47 413 + 1;
#X obj 15 367 metro 60;
#X obj 15 14 inlet;
#X obj 68 217 m_bpm2ms;
#X obj 68 188 unpack 0 0;
#X obj 68 246 / 1;
#X obj 15 459 outlet;
#X text 64 459 tick;
#X obj 68 139 list split 2;
#X obj 149 162 pack 0 8;
#X obj 15 321 t b a;
#X obj 332 362 outlet;
#X obj 68 37 route bpm;
#X text 236 245 hard or soft sync. Hard sync also syncs metro \, soft
only sets beat position.;
#X obj 128 246 route sync pos;
#X obj 223 285 route metro tick;
#X text 345 285 these may go away later.;
#X obj 147 116 s RJC1000-M-IN;
#X obj 147 89 list trim;
#X text 299 61 pass bpm info along to modules;
#X obj 147 61 list prepend ALL bpm;
#X text 149 189 <bpm> <divisor> i.e. "120 8" The divisor sets how many
ticks per beat;
#X obj 15 413 f 0;
#X obj 68 14 inlet;
#X msg 15 295 0;
#X connect 0 0 22 1;
#X connect 1 0 22 0;
#X connect 2 0 24 0;
#X connect 3 0 5 0;
#X connect 4 0 3 0;
#X connect 4 1 5 1;
#X connect 5 0 1 1;
#X connect 8 0 4 0;
#X connect 8 2 9 0;
#X connect 9 0 4 0;
#X connect 10 0 1 0;
#X connect 10 1 22 1;
#X connect 12 0 8 0;
#X connect 12 0 20 0;
#X connect 12 1 14 0;
#X connect 14 0 10 0;
#X connect 14 1 22 1;
#X connect 14 2 15 0;
#X connect 15 0 1 0;
#X connect 15 1 6 0;
#X connect 15 2 11 0;
#X connect 18 0 17 0;
#X connect 20 0 18 0;
#X connect 22 0 0 0;
#X connect 22 0 6 0;
#X connect 23 0 12 0;
#X connect 24 0 10 0;
#X restore 17 95 pd timebase;
#X obj 17 147 s RJC1000-M-IN;
#X text 24 46 bpm <bpm> <div> \, pos <tickpos> \, on 0/1;
#X obj 17 24 r \$0-timebase;
#X msg 17 123 ALL tick \$1;
#X obj 17 68 route init;
#X connect 0 0 4 0;
#X connect 3 0 5 0;
#X connect 4 0 1 0;
#X connect 5 0 0 0;
#X connect 5 1 0 1;
#X restore 64 226 pd timebase;
#X text 167 226 handle time: bpm \, pos \, sync;
#X obj 64 457 r RJC1000-M-OUT;
#X obj 64 484 outlet;
#X text 180 460 read message outlet of modules are report here;
#N canvas 311 241 450 300 state-manager 0;
#X obj 8 89 list;
#X obj 8 185 u_dumpfile;
#X msg 8 111 read \$1 cr \, dump;
#X obj 8 24 r \$0-statefile;
#X text 72 209 play back state messages;
#X obj 8 209 outlet;
#X connect 0 0 2 0;
#X connect 1 0 5 0;
#X connect 2 0 1 0;
#X connect 3 0 0 0;
#X restore 83 32 pd state-manager;
#X obj 65 9 inlet;
#X obj 65 62 list trim;
#N canvas 381 286 686 303 route-system 0;
#X obj 66 33 inlet;
#X obj 66 102 rjc1000-route \$0 volume;
#X obj 66 125 rjc1000-route \$0 clearslots;
#X obj 66 148 rjc1000-route \$0 clearslot;
#X obj 66 171 rjc1000-route \$0 slot;
#X obj 66 79 rjc1000-route \$0 timebase;
#X text 254 78 for bpm \, tick \, etc.;
#X text 254 98 float;
#X text 267 125 empty \, in slot-manager;
#X text 267 145 float id \, in slot-manager;
#X text 230 172 slot filling messages;
#X obj 66 194 rjc1000-route \$0 slot-init;
#X text 260 192 slot filling messages which don't turn off signal graph
;
#X obj 66 56 rjc1000-route \$0 statefile;
#X text 263 55 load a particular statefile (pd messages \, .txt);
#X obj 66 217 rjc1000-route \$0 pdgui;
#X text 260 212 "pdgui 0/1" to inform the system about the necessity
to show Pd's GUI widgets.;
#X connect 0 0 13 0;
#X connect 1 0 2 0;
#X connect 2 0 3 0;
#X connect 3 0 4 0;
#X connect 4 0 11 0;
#X connect 5 0 1 0;
#X connect 11 0 15 0;
#X connect 13 0 5 0;
#X restore 65 150 pd route-system;
#N canvas 356 356 574 253 route-modules 0;
#X obj 66 33 inlet;
#X obj 66 108 s RJC1000-M-IN;
#X text 181 110 everything here is sent to the main module receiver
;
#X connect 0 0 1 0;
#X restore 133 123 pd route-modules;
#X obj 65 85 route system modules;
#X text 264 122 handle module messages;
#X text 183 149 handle and dispatch system messages;
#X text 208 29 receives state filenames on \$0-statefile. State filenames
contain system and module messages. Page-files are state files.;
#N canvas 69 105 450 300 gui 0;
#X obj 121 77 r \$0-pdgui;
#X obj 121 192 s RJC1000-M-IN;
#X msg 121 168 ALL pdgui \$1;
#X text 136 111 0: pd gui off;
#X text 136 127 1: pd gui on;
#X connect 0 0 2 0;
#X connect 2 0 1 0;
#X restore 65 386 pd gui;
#X connect 10 0 11 0;
#X connect 13 0 15 0;
#X connect 14 0 15 0;
#X connect 15 0 18 0;
#X connect 18 0 16 0;
#X connect 18 1 17 0;
